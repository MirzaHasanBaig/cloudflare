eksctl create cluster  --instance-selector-vcpus=2 --instance-selector-memory=2 --name testdev --dry-run > create-cluster.yml


$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
$ chmod 700 get_helm.sh
$ ./get_helm.sh



helm repo add jetstack https://charts.jetstack.io
helm repo update

kubectl apply -f cert-manager.crds.yaml



helm repo add nginx-stable https://helm.nginx.com/stable
helm repo update

helm upgrade --install ingress-nginx ingress-nginx --repo https://kubernetes.github.io/ingress-nginx --namespace ingress-nginx --create-namespace
or
helm install ingress-nginx ingress-n/ingress-nginx --namespace ingress-nginx --create-namespace

kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.yaml


-----------------

helm install nginx-ingress-internal ingress-nginx/ingress-nginx --namespace ingress-basic --set controller.replicaCount=2 --set controller.nodeSelector."kubernetes.io/os"=linux --set controller.admissionWebhooks.patch.nodeSelector."kubernetes.io/os"=linux --set controller.admissionWebhooks.patch.image.digest="" --set defaultBackend.nodeSelector."kubernetes.io/os"=linux --set controller.extraArgs.enable-ssl-passthrough="" --set controller.ingressClassResource.controllerValue="k8s.io/internal-ingress-nginx" --set controller.service.loadBalancerIP=<Static IP Address> --set controller.service.annotations."service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path"=/healthz

helm install nginx-ingress-internal ingress-nginx/ingress-nginx 
--namespace ingress-basic 
--set controller.replicaCount=2 
--set controller.nodeSelector."kubernetes.io/os"=linux 
--set controller.admissionWebhooks.patch.nodeSelector."kubernetes.io/os"=linux 
--set controller.admissionWebhooks.patch.image.digest="" 
--set defaultBackend.nodeSelector."kubernetes.io/os"=linux 
--set controller.extraArgs.enable-ssl-passthrough="" 
--set controller.ingressClassResource.name="internal-nginx" 
--set controller.ingressClassResource.controllerValue="k8s.io/internal-ingress-nginx" 
--set controller.service.loadBalancerIP=<Static IP Address> 
--set controller.service.annotations."service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path"=/healthz


helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update


helm install nginx-ingress-internal nginx-stable/nginx-ingress --set controller.service.type=LoadBalancer


helm install nginx-ingress-internal-test nginx-stable/nginx-ingress --namespace ingress-basic --set controller.replicaCount=2 --set controller.nodeSelector."kubernetes\.io/os"=linux --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux --set controller.admissionWebhooks.patch.image.digest="" --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux --set controller.extraArgs.enable-ssl-passthrough="" --set controller.ingressClassResource.name="internal-nginx" --set controller.ingressClassResource.controllerValue="k8s.io/internal-ingress-nginx" --set controller.service.type=LoadBalancer


helm install cert-manager jetstack/cert-manager --install --create-namespace --wait --namespace cert-manager --set installCRDs=true


helm install nginx-ingress-internal-tes nginx-stable/nginx-ingress --namespace ingress-basic --set controller.replicaCount=2 --set controller.nodeSelector."kubernetes\.io/os"=linux --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux --set controller.admissionWebhooks.patch.image.digest="" --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux --set controller.extraArgs.enable-ssl-passthrough="" --set controller.ingressClassResource.name="internal-nginx" --set controller.ingressClassResource.controllerValue="k8s.io/internal-ingress-nginx" --set controller.service.type=LoadBalancer